name: myGoCI

on:
  push:
    branches: [ '*' ]  # 所有分支发生push事件时都会触发该工作流
  pull_request:
    types: [ opened,synchronize,closed ]  # 只有在创建PR、源分支代码更新、合并PR
    branches: [ 'master' ]  # 且PR的目标分支是master时才会触发该工作流
    

jobs:

  build_and_push_image:  # job id
    runs-on: ubuntu-latest  # 运行时所需要的虚拟机环境
    steps:
    
    - name: Set up Go 1.23
      uses: actions/setup-go@v4  # 引用别人已经创建好的actions脚本，用来设置go的运行环境
      with:  # 指定actions脚本所需的输入参数，每个都是键值对格式
        go-version: '1.23'
        
    - name: clone code
      uses: actions/checkout@v4  # 拉取/克隆代码
    
    - name: Build
      run: go build -o awesome .

    - name: Collecting Binaries
      uses: actions/upload-artifact@v4.6.2
      with:
        name: awesome  # 上传至制品仓库后的文件名
        path: awesome  # 要收集上传至制品仓库的二进制文件路径
      
    - name: Publish to Docker Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        registry: registry.cn-hangzhou.aliyuncs.com  # 登陆地址
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        name: registry.cn-hangzhou.aliyuncs.com/dongjun11/awesome:test  # 默认的镜像名称
        dockerfile: Dockerfile
        tag_names: true  # 将commit中的tag作为镜像的tag
        
